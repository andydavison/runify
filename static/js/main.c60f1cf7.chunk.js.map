{"version":3,"sources":["components/SavePlaylist/SavePlaylist.module.css","components/Header/Header.module.css","components/Button/Button.module.css","components/Login/Login.module.css","components/TrackList/TrackList.module.css","components/Content/Content.module.css","components/LoggedIn/LoggedIn.module.css","components/Button/Button.js","components/Login/Login.js","assets/base64images.js","components/Track/Track.js","components/TrackList/TrackList.js","components/SavePlaylist/SavePlaylist.js","components/Content/Content.js","components/LoggedIn/LoggedIn.js","components/Header/Header.js","App.js","serviceWorker.js","index.js","components/Track/Track.module.css"],"names":["module","exports","Button","text","onClick","active","disabled","className","css","button","handleLoginClick","state","length","possible","i","charAt","Math","floor","random","generateRandomString","localStorage","setItem","url","encodeURIComponent","window","location","Login","container","base64images","gentle","moderate","hardcore","Track","imgSrc","name","artist","albumArt","aria-hidden","src","width","alt","trackDetails","TrackList","tracks","map","track","key","id","SavePlaylist","onSubmit","useState","isDisabled","setIsDisabled","handleSubmit","e","preventDefault","playlistName","setPlaylistName","form","input","type","value","onChange","event","target","Content","children","LoggedIn","userName","userId","spotifyConfig","topTrackIds","setTopTrackIds","recommendations","setRecommendations","selectedIntensity","setSelectedIntensity","playlistSaved","setPlaylistSaved","useEffect","a","axios","get","topTracksResponse","data","items","fetchTopTracks","handleClickGenerate","intensity","params","seed_tracks","join","min_energy","min_danceability","target_danceability","min_tempo","max_tempo","target_energy","recsResponse","newRecs","album","images","find","img","height","artists","handleSavePlaylist","post","description","createPlaylistResponse","trackURIs","addTracksResponse","uris","updateImageResponse","put","headers","Authorization","Promise","all","textBlockIntro","intensityButtonsContainer","textBlock","savedMessage","Header","header","h1","h2","App","hashParams","r","q","hash","substring","exec","decodeURIComponent","getHashParams","loggedIn","setLoggedIn","setSpotifyConfig","user","setUser","access_token","config","then","res","display_name","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c60f1cf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SavePlaylist_input__2bkuX\",\"button\":\"SavePlaylist_button__2yK3c\",\"form\":\"SavePlaylist_form__4WdEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__CvE4g\",\"h1\":\"Header_h1__102_R\",\"h2\":\"Header_h2__1T6fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2ybLX\",\"active\":\"Button_active__2g55U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2Fw4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackList_container__3Q8Al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Content_container__21ppV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoggedIn_container__11UaM\",\"intensityButtonsContainer\":\"LoggedIn_intensityButtonsContainer__OO3Vv\",\"content\":\"LoggedIn_content__K4LOn\",\"textBlock\":\"LoggedIn_textBlock__126ig\",\"textBlockIntro\":\"LoggedIn_textBlockIntro__3P9oU\",\"savedMessage\":\"LoggedIn_savedMessage__GPps5\",\"gentle\":\"LoggedIn_gentle__2n6mz\",\"moderate\":\"LoggedIn_moderate__30mVD\",\"hardcore\":\"LoggedIn_hardcore__pQuvO\"};","import React from \"react\";\r\nimport css from \"./Button.module.css\";\r\n\r\nconst Button = ({ text, onClick, active, disabled = false, className }) => {\r\n  return (\r\n    <button\r\n      disabled={disabled}\r\n      className={`${css.button} ${active ? css.active : \"\"} ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport css from \"./Login.module.css\";\r\n\r\nconst generateRandomString = (length) => {\r\n  let text = \"\";\r\n  const possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n};\r\n\r\nconst handleLoginClick = () => {\r\n  const client_id = \"3b8c83cbf3d1495eb3bbec76ac25dbc1\"; // Your client id\r\n  const redirect_uri =\r\n    process.env.NODE_ENV === \"development\"\r\n      ? \"http://localhost:3000\"\r\n      : \"https://andydavison.github.io/runify\"; // Your redirect uri\r\n  const state = generateRandomString(16);\r\n  localStorage.setItem(\"runify_state\", state);\r\n  const scope =\r\n    \"user-read-private user-read-email user-top-read playlist-modify-public ugc-image-upload\";\r\n  var url = \"https://accounts.spotify.com/authorize\";\r\n  url += \"?response_type=token\";\r\n  url += \"&client_id=\" + encodeURIComponent(client_id);\r\n  url += \"&scope=\" + encodeURIComponent(scope);\r\n  url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\r\n  url += \"&state=\" + encodeURIComponent(state);\r\n\r\n  window.location = url;\r\n};\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div className={css.container}>\r\n      <Button onClick={handleLoginClick} text=\"Login with Spotify\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Login };\r\n","const gentle =\r\n  \"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\";\r\nconst moderate =\r\n  \"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\";\r\nconst hardcore =\r\n  \"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\";\r\n\r\nexport const base64images = { gentle, moderate, hardcore };\r\n","import React from \"react\";\r\nimport css from \"./Track.module.css\";\r\n\r\nconst Track = ({ imgSrc, name, artist }) => {\r\n  return (\r\n    <li className={css.container}>\r\n      <img className={css.albumArt} aria-hidden=\"true\" src={imgSrc} width={64} alt={`${name} — ${artist}`} />\r\n      <div className={css.trackDetails}>\r\n        <p>{name}</p>\r\n        <p>{artist}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { Track };\r\n","import React from \"react\";\r\nimport { Track } from \"../Track\";\r\nimport css from \"./TrackList.module.css\";\r\n\r\nconst TrackList = ({ tracks }) => {\r\n  return (\r\n    <ul className={css.container}>\r\n      {tracks.map((track) => (\r\n        <Track\r\n          key={track.id}\r\n          imgSrc={track.imgSrc}\r\n          name={track.name}\r\n          artist={track.artist}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport { TrackList };\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"../Button\";\r\nimport css from \"./SavePlaylist.module.css\";\r\n\r\nconst SavePlaylist = ({ onSubmit }) => {\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsDisabled(true);\r\n    onSubmit(playlistName);\r\n  };\r\n  const handleChange = (event) => {\r\n    setPlaylistName(event.target.value);\r\n  };\r\n  const [playlistName, setPlaylistName] = useState(\"My Runify Playlist\");\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        value={playlistName}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n        className={css.button}\r\n        text=\"Save Playlist\"\r\n        onClick={handleSubmit}\r\n        disabled={isDisabled}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport { SavePlaylist };\r\n","import React from \"react\";\r\nimport css from \"./Content.module.css\";\r\n\r\nconst Content = ({ children, className }) => (\r\n  <div className={`${css.container} ${className}`}>{children}</div>\r\n);\r\n\r\nexport { Content };\r\n","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"../Button\";\r\nimport css from \"./LoggedIn.module.css\";\r\nimport dummyRec from \"./dummyRec.json\";\r\nimport { base64images } from \"../../assets/base64images\";\r\nimport { TrackList } from \"../TrackList/TrackList\";\r\nimport { SavePlaylist } from \"../SavePlaylist/SavePlaylist\";\r\nimport { Content } from \"../Content\";\r\n\r\nconst LoggedIn = ({ userName, userId, spotifyConfig }) => {\r\n  const [topTrackIds, setTopTrackIds] = useState([]);\r\n  const [recommendations, setRecommendations] = useState({\r\n    gentle: [],\r\n    moderate: [],\r\n    hardcore: [],\r\n  });\r\n  const [selectedIntensity, setSelectedIntensity] = useState(null);\r\n  const [playlistSaved, setPlaylistSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchTopTracks = async () => {\r\n      const topTracksResponse = await axios.get(\r\n        \"https://api.spotify.com/v1/me/top/tracks?limit=5\",\r\n        spotifyConfig\r\n      );\r\n      const topTrackIds = topTracksResponse.data.items.map((track) => track.id);\r\n      setTopTrackIds(topTrackIds);\r\n    };\r\n    fetchTopTracks();\r\n  }, []);\r\n\r\n  const handleClickGenerate = async (intensity) => {\r\n    if (!recommendations[intensity].length) {\r\n      let params = {\r\n        seed_tracks: topTrackIds.join(\",\"),\r\n        min_energy: 0.4,\r\n        min_danceability: 0.5,\r\n        target_danceability: 1.0,\r\n      };\r\n      switch (intensity) {\r\n        case \"gentle\":\r\n          params.min_tempo = 110;\r\n          params.max_tempo = 130;\r\n          params.target_energy = 0.65;\r\n          break;\r\n        case \"moderate\":\r\n          params.min_tempo = 130;\r\n          params.max_tempo = 150;\r\n          params.target_energy = 0.85;\r\n          break;\r\n        case \"hardcore\":\r\n          params.min_tempo = 150;\r\n          params.max_tempo = 180;\r\n          params.target_energy = 1;\r\n          break;\r\n      }\r\n      const recsResponse = await axios.get(\r\n        \"https://api.spotify.com/v1/recommendations\",\r\n        { ...spotifyConfig, params }\r\n      );\r\n      const newRecs = recsResponse.data.tracks.map((track) => {\r\n        const imgSrc =\r\n          track.album.images.find((img) => img.height == 64).url ||\r\n          track.album.images[track.album.images.length - 2].url;\r\n        const name = track.name;\r\n        const artist = track.artists.map((artist) => artist.name).join(\", \");\r\n        const id = track.id;\r\n        return { imgSrc, name, artist, id };\r\n      });\r\n      setRecommendations({ ...recommendations, [intensity]: newRecs });\r\n    }\r\n\r\n    setSelectedIntensity(intensity);\r\n    setPlaylistSaved(false);\r\n  };\r\n\r\n  const handleSavePlaylist = async (playlistName) => {\r\n    const createPlaylistResponse = await axios.post(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists`,\r\n      {\r\n        name: playlistName,\r\n        description: `A ${selectedIntensity} running playlist, created by Runify`,\r\n      },\r\n      spotifyConfig\r\n    );\r\n    const trackURIs = recommendations[selectedIntensity].map(\r\n      (track) => \"spotify:track:\" + track.id\r\n    );\r\n    const addTracksResponse = axios.post(\r\n      `https://api.spotify.com/v1/playlists/${createPlaylistResponse.data.id}/tracks`,\r\n      {\r\n        uris: trackURIs,\r\n      },\r\n      spotifyConfig\r\n    );\r\n    const updateImageResponse = axios.put(\r\n      `https://api.spotify.com/v1/playlists/${createPlaylistResponse.data.id}/images`,\r\n      base64images[selectedIntensity],\r\n      {\r\n        headers: {\r\n          Authorization: spotifyConfig.headers.Authorization,\r\n          \"Content-Type\": \"image/jpeg\",\r\n        },\r\n      }\r\n    );\r\n    await Promise.all([addTracksResponse, updateImageResponse]);\r\n    setPlaylistSaved(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`${css.container} ${css[selectedIntensity]}`}>\r\n      <Content>\r\n        <p className={css.textBlockIntro}>\r\n          Hi {userName}, you're logged in! What's your speed?\r\n        </p>\r\n        <div className={css.intensityButtonsContainer}>\r\n          <Button\r\n            text=\"Gentle\"\r\n            active={selectedIntensity === \"gentle\"}\r\n            onClick={() => handleClickGenerate(\"gentle\")}\r\n          />\r\n          <Button\r\n            text=\"Moderate\"\r\n            active={selectedIntensity === \"moderate\"}\r\n            onClick={() => handleClickGenerate(\"moderate\")}\r\n          />\r\n          <Button\r\n            text=\"Hardcore\"\r\n            active={selectedIntensity === \"hardcore\"}\r\n            onClick={() => handleClickGenerate(\"hardcore\")}\r\n          />\r\n        </div>\r\n        {selectedIntensity && !!recommendations[selectedIntensity].length && (\r\n          <>\r\n            <div className={css.textBlock}>\r\n              <p>\r\n                Here's your personalised playlist, based on your music taste and\r\n                chosen intensity\r\n              </p>\r\n              <p>Choose a name and click below to save it to your account</p>\r\n            </div>\r\n            {playlistSaved ? (\r\n              <p className={css.savedMessage}>Playlist saved!</p>\r\n            ) : (\r\n              <SavePlaylist onSubmit={handleSavePlaylist} />\r\n            )}\r\n            <TrackList tracks={recommendations[selectedIntensity]} />\r\n          </>\r\n        )}\r\n      </Content>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { LoggedIn };\r\n","import React from \"react\";\r\nimport css from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={css.header}>\r\n      <h1 className={css.h1}>Runify</h1>\r\n      <h2 className={css.h2}>A running playlist creator, based on your taste</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Login } from \"./components/Login\";\nimport { LoggedIn } from \"./components/LoggedIn\";\nimport { Header } from \"./components/Header\";\nimport \"./App.css\";\n\nconst getHashParams = () => {\n  const hashParams = {};\n  let e;\n  const r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(1);\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n  return hashParams;\n};\n\nfunction App() {\n  const hashParams = getHashParams();\n  const [loggedIn, setLoggedIn] = useState(false); //!!hashParams.access_token; // jazz this up with a state check!\n  const [spotifyConfig, setSpotifyConfig] = useState({}); // reset token if invalid, timed out\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    if (hashParams.access_token) {\n      const config = {\n        headers: { Authorization: `Bearer ${hashParams.access_token}` },\n      };\n      setSpotifyConfig(config);\n      axios.get(\"https://api.spotify.com/v1/me\", config).then((res) => {\n        const user = { id: res.data.id, name: res.data.display_name };\n        setUser(user);\n        setLoggedIn(true);\n      });\n    }\n  }, [hashParams.access_token]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {!loggedIn ? (\n        <Login />\n      ) : (\n        <LoggedIn userName={user.name} userId={user.id} spotifyConfig={spotifyConfig} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Track_container__mTkTn\",\"trackDetails\":\"Track_trackDetails__3xvz7\",\"albumArt\":\"Track_albumArt__18XRM\"};"],"sourceRoot":""}